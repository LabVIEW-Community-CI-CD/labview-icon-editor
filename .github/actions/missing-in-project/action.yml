name: "MissingÂ InÂ Project"
description: >
  Callsâ€¯MissinInProjectCLI.vi (sideâ€‘byâ€‘side with this action) viaâ€¯gâ€‘cli,
  pointing at <project-path>/lv_icon.lvproj (defaults to repo root),
  immediately failing on any nonâ€‘zero exit, and exporting:

  â€¢Â passed          â†’ Boolean  
  â€¢Â missing-files   â†’ String

branding:
  icon: "check-circle"
  color: "purple"

inputs:
  lv-ver:
    description: "LabVIEW version (e.g. '2021')"
    required: true
  arch:
    description: "Bitness (32 or 64)"
    required: true
  project-path:
    description: >-
      Path containing lv_icon.lvproj.  
      Defaults to the repository root.
    required: false

outputs:
  passed:
    description: "True if VI reported success"
  missing-files:
    description: "Commaâ€‘separated list of missing files"

runs:
  using: composite
  steps:

    - name: Resolve project folder
      id: resolve
      shell: pwsh
      run: |
        $proj = '${{ inputs.project-path }}'
        if (-not $proj) { $proj = $Env:GITHUB_WORKSPACE }
        if (-not (Test-Path $proj)) {
          throw "Project path not found: $proj"
        }
        echo "proj=$proj" >> $GITHUB_OUTPUT

    - name: Locate MissingInProjectCLI.vi
      id: locate
      shell: pwsh
      run: |
        $vi = Join-Path $Env:GITHUB_ACTION_PATH 'MissinInProjectCLI.vi'
        if (-not (Test-Path $vi)) {
          throw "MissinInProjectCLI.vi not found at: $vi"
        }
        echo "viPath=$vi" >> $GITHUB_OUTPUT

    - name: Execute VI via gâ€‘cli
      id: run_vi
      shell: pwsh
      run: |
        function Exec {
          param($cmd, $args)
          Write-Host "â–¶ $cmd $args"
          $out = & $cmd $args
          if ($LASTEXITCODE -ne 0) {
            throw "$cmd failed with exit code $LASTEXITCODE"
          }
          return $out
        }

        $proj   = '${{ steps.resolve.outputs.proj }}'
        $lvproj = Join-Path $proj 'lv_icon.lvproj'
        if (-not (Test-Path $lvproj)) {
          throw "lv_icon.lvproj not found at: $lvproj"
        }

        $vi     = '${{ steps.locate.outputs.viPath }}'
        $args   = "--lv-ver ${{ inputs.lv-ver }} --arch ${{ inputs.arch }} `"$vi`" `"$lvproj`""

        $raw    = Exec 'g-cli' $args
        $parsed = $raw | ConvertFrom-Json

        echo "passed=$($parsed.Passed)"       >> $GITHUB_OUTPUT
        echo "missing-files=$($parsed.MissingFiles)" >> $GITHUB_OUTPUT

        Write-Host "âœ… Passed = $($parsed.Passed)"
        if (-not $parsed.Passed) {
          Write-Host "ðŸ“‹ Missing files:`n$($parsed.MissingFiles)"
        }