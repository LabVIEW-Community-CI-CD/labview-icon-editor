name: Build VI Package

on:
  # Any triggers you want (push, PR, workflow_dispatch, etc.)
  push:
    branches: [main, develop, release/*, hotfix/*]
  pull_request:
    branches: [main, develop, release/*, hotfix/*]
  workflow_dispatch:

jobs:
  build-vi-package:
    runs-on: [self-hosted, iconeditor]

    steps:
      # (1) Check out your repo so we can read/write version.json
      - name: Check out code
        uses: actions/checkout@v3
        with:
          # If you want to push changes back, you need write permissions
          persist-credentials: true

      # (2) Load semantic version
      - name: Load semantic version
        id: load_version
        shell: pwsh
        run: |
          $versionFile = "$($env:GITHUB_WORKSPACE)/version.json"
          if (-not (Test-Path $versionFile)) {
            Write-Error "Cannot find version.json in the repo!"
            exit 1
          }
          $json = Get-Content $versionFile | ConvertFrom-Json

          Write-Output "MAJOR=$($json.Major)"   >> $env:GITHUB_OUTPUT
          Write-Output "MINOR=$($json.Minor)"   >> $env:GITHUB_OUTPUT
          Write-Output "PATCH=$($json.Patch)"   >> $env:GITHUB_OUTPUT
          Write-Output "BUILD=$($json.Build)"   >> $env:GITHUB_OUTPUT

      # (3) Increment Build number
      - name: Increment Build number
        id: inc_build
        shell: pwsh
        run: |
          $versionFile = "$($env:GITHUB_WORKSPACE)/version.json"
          $json = Get-Content $versionFile | ConvertFrom-Json

          $json.Build = [int]$json.Build + 1
          $json | ConvertTo-Json -Depth 10 | Out-File $versionFile -Encoding UTF8

          Write-Host "New Build number is $($json.Build)"
          Write-Output "NEW_BUILD=$($json.Build)" >> $env:GITHUB_OUTPUT

      # (4) Build
      - name: Build the icon editor VI package
        shell: pwsh
        env:
          MAJOR: ${{ steps.load_version.outputs.MAJOR }}
          MINOR: ${{ steps.load_version.outputs.MINOR }}
          PATCH: ${{ steps.load_version.outputs.PATCH }}
          BUILD: ${{ steps.inc_build.outputs.NEW_BUILD }}
          COMMIT: ${{ github.sha }}
        run: |
          $repoRoot      = $env:GITHUB_WORKSPACE
          $scriptsFolder = Join-Path $repoRoot 'pipeline/scripts'

          Write-Host "Semantic Version: $($env:MAJOR).$($env:MINOR).$($env:PATCH).$($env:BUILD)"
          Write-Host "Commit: $($env:COMMIT)"

          .\pipeline\scripts\Build.ps1 `
            -RelativePath        $repoRoot `
            -AbsolutePathScripts $scriptsFolder `
            -Major               $env:MAJOR `
            -Minor               $env:MINOR `
            -Patch               $env:PATCH `
            -Build               $env:BUILD `
            -Commit              $env:COMMIT

      # (5) Commit updated version.json (non-blocking, continue on error)
      - name: Commit updated version.json
        if: ${{ success() && (github.event_name != 'pull_request') }}
        continue-on-error: true   # <-- The key addition
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add version.json
          git commit -m "CI: Bump Build number to ${{ steps.inc_build.outputs.NEW_BUILD }}"
          git push

      # (6) Upload build artifact
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: vi-package
          path: 'builds/VI Package'
