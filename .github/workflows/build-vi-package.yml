name: Version 2 Build & Release

on:
  push:
    branches:
      - main
      - develop
      - release/*
      - hotfix/*
  pull_request:
    branches:
      - main
      - develop
      - release/*
      - hotfix/*
  workflow_dispatch:

jobs:
  build-release:
    # ADDED: link this job to the "production" environment
    environment: production
    
    runs-on: [self-hosted, iconeditor]

    permissions:
      contents: write
      issues: read
      pull-requests: read

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Validate version bump label
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v6
        with:
          script: |
            const labels = context.payload.pull_request.labels.map(l => l.name.toLowerCase());
            const allowed = ['major', 'minor', 'patch'];
            const intersection = labels.filter(l => allowed.includes(l));
            if (intersection.length === 0) {
              core.setFailed(`No valid version label found. Must have one of: ${allowed.join(', ')}`);
            } else {
              core.info(`Found valid label(s): ${intersection.join(', ')}`);
            }

      - name: Determine bump type
        id: bump_type
        uses: actions/github-script@v6
        with:
          script: |
            if (context.event_name === 'pull_request') {
              const labels = context.payload.pull_request.labels.map(l => l.name.toLowerCase());
              core.info(`Found labels on PR: ${labels.join(', ')}`);

              let bump = 'patch'; // fallback
              if (labels.includes('major')) {
                bump = 'major';
              } else if (labels.includes('minor')) {
                bump = 'minor';
              } else if (labels.includes('patch')) {
                bump = 'patch';
              }
              core.setOutput('bump_type', bump);
            } else {
              core.setOutput('bump_type', 'patch');
            }

      - name: Retrieve & increment global build number
        id: inc_build
        uses: actions/github-script@v6
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const environmentName = "production";

            const repoData = await github.rest.repos.get({ owner, repo });
            const repoId = repoData.data.id;

            const varsList = await github.request(
              'GET /repositories/{repo_id}/environments/{environment_name}/variables',
              {
                repo_id: repoId,
                environment_name: environmentName
              }
            );

            let currentBuildNumber = 0;
            const buildVar = varsList.data.variables.find(v => v.name === "GLOBAL_BUILD_COUNTER");
            if (buildVar) {
              currentBuildNumber = parseInt(buildVar.value, 10) || 0;
            }
            currentBuildNumber++;
            core.info(`Incrementing GLOBAL_BUILD_COUNTER => ${currentBuildNumber}`);

            await github.request(
              'PATCH /repositories/{repo_id}/environments/{environment_name}/variables/{name}',
              {
                repo_id: repoId,
                environment_name: environmentName,
                name: "GLOBAL_BUILD_COUNTER",
                value: String(currentBuildNumber)
              }
            );

            core.setOutput("new_build_number", String(currentBuildNumber));

      # ... (rest of steps unchanged) ...
