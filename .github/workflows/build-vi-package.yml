name: Build VI Package

on:
  push:
    branches: [main, develop, release/*, hotfix/*]
  pull_request:
    branches: [main, develop, release/*, hotfix/*]
  workflow_dispatch:

jobs:
  build-vi-package:
    runs-on: [self-hosted, iconeditor]

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      - name: Load semantic version
        id: load_version
        shell: pwsh
        run: |
          $versionFile = "$($env:GITHUB_WORKSPACE)/version.json"
          if (-not (Test-Path $versionFile)) {
            Write-Error "Cannot find version.json in the repo!"
            exit 1
          }
          $json = Get-Content $versionFile | ConvertFrom-Json
          Write-Output "MAJOR=$($json.Major)" >> $env:GITHUB_OUTPUT
          Write-Output "MINOR=$($json.Minor)" >> $env:GITHUB_OUTPUT
          Write-Output "PATCH=$($json.Patch)" >> $env:GITHUB_OUTPUT
          Write-Output "BUILD=$($json.Build)" >> $env:GITHUB_OUTPUT

      - name: Increment Build number
        id: inc_build
        shell: pwsh
        run: |
          $versionFile = "$($env:GITHUB_WORKSPACE)/version.json"
          $json = Get-Content $versionFile | ConvertFrom-Json
          # Add 1 to the Build
          $json.Build = [int]$json.Build + 1
          # Save back to file
          $json | ConvertTo-Json -Depth 10 | Out-File $versionFile -Encoding UTF8
          Write-Host "New Build number is $($json.Build)"
          Write-Output "NEW_BUILD=$($json.Build)" >> $env:GITHUB_OUTPUT

      - name: Build the icon editor VI package
        shell: pwsh
        env:
          MAJOR: ${{ steps.load_version.outputs.MAJOR }}
          MINOR: ${{ steps.load_version.outputs.MINOR }}
          PATCH: ${{ steps.load_version.outputs.PATCH }}
          BUILD: ${{ steps.inc_build.outputs.NEW_BUILD }}
          COMMIT: ${{ github.sha }}
        run: |
          $repoRoot      = $env:GITHUB_WORKSPACE
          $scriptsFolder = Join-Path $repoRoot 'pipeline/scripts'

          Write-Host "Semantic Version: $($env:MAJOR).$($env:MINOR).$($env:PATCH).$($env:BUILD)"
          Write-Host "Commit: $($env:COMMIT)"

          .\pipeline\scripts\Build.ps1 `
            -RelativePath        $repoRoot `
            -AbsolutePathScripts $scriptsFolder `
            -Major               $env:MAJOR `
            -Minor               $env:MINOR `
            -Patch               $env:PATCH `
            -Build               $env:BUILD `
            -Commit              $env:COMMIT

      # (Apply #4 & #5)
      - name: Commit updated version.json
        # Use if: success() AND not a pull request reference
        if: ${{ success() && !startsWith(github.ref, 'refs/pull/') }}
        continue-on-error: true
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add version.json
          # Append [skip ci] to prevent re-triggering the same workflow
          git commit -m "CI: Bump Build number to ${{ steps.inc_build.outputs.NEW_BUILD }} [skip ci]"
          git push

      # (Apply #7) Rename artifact with full Major.Minor.Patch.Build
      - name: Upload VIP artifact
        uses: actions/upload-artifact@v4
        with:
          name: "vi-package-${{ steps.load_version.outputs.MAJOR }}.${{ steps.load_version.outputs.MINOR }}.${{ steps.load_version.outputs.PATCH }}.${{ steps.inc_build.outputs.NEW_BUILD }}"
          path: "builds/VI Package/*.vip"
