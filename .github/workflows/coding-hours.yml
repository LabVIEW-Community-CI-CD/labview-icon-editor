name: Coding‑hours report

on:
  schedule:
    - cron: '0 0 * * 1'                 # every Monday 00:00 UTC
  workflow_dispatch:
    inputs:
      window_start:
        description: 'Report since YYYY‑MM‑DD'
        required: false

permissions:
  contents: write                       # push to metrics & gh‑pages
  pages: write
  id-token: write

jobs:
###############################################################################
# Job 1 – run git‑hours (Go), convert to JSON, commit badge + snapshot
###############################################################################
  report:
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest

    steps:
    # 1 Checkout full history
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # 2 Go tool‑chain
    - uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    # 3 Install git‑hours v0.1.2 (patch go.mod for Go 1.24)
    - name: Install git‑hours
      run: |
        git clone --depth 1 --branch v0.1.2 https://github.com/trinhminhtriet/git-hours.git git-hours-src
        sed -i 's/go 1.24.1/go 1.24/' git-hours-src/go.mod
        (cd git-hours-src && go install .)
        git-hours --version

    # 4 Run git‑hours → raw.txt
    - name: Generate raw report
      run: |
        ARGS=""
        if [ -n "${{ github.event.inputs.window_start }}" ]; then
          ARGS+=" -since ${{ github.event.inputs.window_start }}"
        fi
        git-hours $ARGS > raw.txt
        cat raw.txt

    # 5 Convert raw.txt → git-hours.json   (hours + commits per email)
    - name: Convert to JSON
      run: |
        python - <<'PY'
        import sys, json, re, pathlib
        hours = {}
        total_h = total_c = 0
        for line in open('raw.txt'):
            line = line.rstrip()
            if not line or line.lower().startswith(('author','name','user','----')):
                continue
            parts = re.split(r'\s+', line)
            if parts[0].lower().startswith('total'):
                # Some git-hours builds emit a total row; ignore here – we recompute.
                continue
            if len(parts) < 3:
                continue
            commits = int(parts[-1])
            hrs     = int(parts[-2])
            email   = ' '.join(parts[:-2])
            hours[email] = {"name": email, "hours": hrs, "commits": commits}
            total_h += hrs
            total_c += commits
        hours["total"] = {"name":"", "hours": total_h, "commits": total_c}
        pathlib.Path('git-hours.json').write_text(json.dumps(hours, indent=2))
        PY
        cat git-hours.json

    # 6 Install jq (for badge)
    - name: Install jq
      run: sudo apt-get update -y && sudo apt-get install -y jq

    # 7 Build Shields badge
    - name: Build badge.json
      run: |
        HOURS=$(jq '.total.hours' git-hours.json)
        cat > badge.json <<EOF
        { "schemaVersion": 1,
          "label": "Coding hours",
          "message": "${HOURS}h",
          "color": "informational" }
        EOF

    # 8 Summary table
    - name: Add workflow summary
      run: |
        echo "### ⏱ Coding‑hours report" >> "$GITHUB_STEP_SUMMARY"
        jq -r '
          to_entries
          | map(select(.key!="total"))
          | sort_by(-.value.hours)
          | (["Contributor","Hours","Commits"]
             , (map([.key, (.value.hours|tostring), (.value.commits|tostring)])))
          | @tsv' git-hours.json | column -t -s $'\t' >> "$GITHUB_STEP_SUMMARY"

    # 9 Upload JSON for Pages build
    - uses: actions/upload-artifact@v4
      with:
        name: git-hours-json
        path: git-hours.json
        retention-days: 30

    # 10 Commit badge + snapshot to metrics
    - name: Push to metrics branch
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name  "git-hours bot"
        git config --global user.email "bot@github.com"

        git fetch origin metrics || true
        git switch metrics 2>/dev/null || git switch -c metrics

        mkdir -p reports
        cp git-hours.json "reports/git-hours-$(date +%F).json"
        git add reports badge.json
        git commit -m "chore(metrics): report $(date +%F)" || echo "No change"
        git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }} metrics

###############################################################################
# Job 2 – build static dashboard and upload as Pages artifact
###############################################################################
  build-site:
    needs: report
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: actions/download-artifact@v4
      with:
        name: git-hours-json
        path: tmp                             # tmp/git-hours.json

    - name: Build KPIs site
      run: |
        DATE=$(date +%F)
        mkdir -p site/data
        cp tmp/git-hours.json "site/data/git-hours-${DATE}.json"
        cp tmp/git-hours.json site/git-hours-latest.json

        python - <<'PY'
        import json, datetime, pathlib, html, textwrap
        data  = json.load(open('tmp/git-hours.json'))
        total = data['total']
        labels = [html.escape(k) for k in data.keys() if k != 'total']
        rows = "\n".join(
            f"<tr><td>{l}</td><td>{data[l]['hours']}</td><td>{data[l]['commits']}</td></tr>"
            for l in labels)

        page = f"""
        <!doctype html><html lang='en'><head>
          <meta charset='utf-8'>
          <title>Collaborator KPIs</title>
          <link rel='stylesheet'
                href='https://cdn.jsdelivr.net/npm/simpledotcss/simple.min.css'>
          <script src='https://cdn.jsdelivr.net/npm/sortable-tablesort/sortable.min.js' defer></script>
          <script src='https://cdn.jsdelivr.net/npm/chart.js'></script>
          <style>canvas{{max-height:400px}}</style>
        </head><body><main>
          <h1>Collaborator KPIs</h1>
          <p><em>Last updated {datetime.datetime.utcnow():%Y‑%m‑%d %H:%M UTC}</em></p>

          <h2>Totals</h2>
          <ul>
            <li><strong>Hours</strong>: {total['hours']}</li>
            <li><strong>Commits</strong>: {total['commits']}</li>
            <li><strong>Contributors</strong>: {len(data)-1}</li>
          </ul>

          <h2>Hours per contributor</h2>
          <canvas id='hoursChart'></canvas>

          <h2>Detail table</h2>
          <table class='sortable'>
            <thead><tr><th>Contributor</th><th>Hours</th><th>Commits</th></tr></thead>
            <tbody>{rows}</tbody>
          </table>

          <p>Historical JSON snapshots live in <code>/data</code>.</p>

          <script>
            fetch('git-hours-latest.json')
              .then(r => r.json())
              .then(d => {{
                const labels = Object.keys(d).filter(k => k !== 'total');
                const hours  = labels.map(l => d[l].hours);
                new Chart(document.getElementById('hoursChart'), {{
                  type: 'bar',
                  data: {{
                    labels: labels,
                    datasets: [{{ label: 'Hours', data: hours }}]
                  }},
                  options: {{
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {{ legend: {{ display: false }} }},
                    scales: {{ y: {{ beginAtZero: true }} }}
                  }}
                }});
              }});
          </script>
        </main></body></html>
        """
        pathlib.Path('site/index.html').write_text(textwrap.dedent(page))
        PY

    - uses: actions/upload-pages-artifact@v2
      with:
        path: site

###############################################################################
# Job 3 – deploy artifact to GitHub Pages
###############################################################################
  deploy-pages:
    needs: build-site
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - id: deployment
      uses: actions/deploy-pages@v4
