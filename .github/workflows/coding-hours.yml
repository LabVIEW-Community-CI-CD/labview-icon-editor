name: Coding‑hours report

on:
  schedule:
    - cron: '0 0 * * 1'                  # every Monday 00:00 UTC
  workflow_dispatch:
    inputs:
      window_start:
        description: 'Report since YYYY‑MM‑DD'
        required: false

permissions:
  contents: write                         # push to metrics & gh‑pages
  pages: write
  id-token: write

env:
  JIKYUU_VERSION: "0.1.1"                 # crates.io version to build & cache

###############################################################################
# Job 1 ─ Generate JSON, create badge, commit to `metrics` (develop only)
###############################################################################
jobs:
  report:
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest

    steps:
    #-----------------------------------------------------------------------#
    # 1 Checkout repository (full history for git analysis)
    #-----------------------------------------------------------------------#
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    #-----------------------------------------------------------------------#
    # 2 System packages required by jikyuu → openssl‑sys, plus jq
    #-----------------------------------------------------------------------#
    - name: Install system prerequisites
      run: |
        sudo apt-get update -y
        sudo apt-get install -y libssl-dev pkg-config jq

    #-----------------------------------------------------------------------#
    # 3 Install Rust (minimal profile, stable) via rustup
    #-----------------------------------------------------------------------#
    - name: Install Rust toolchain
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs \
          | sh -s -- -y --profile minimal --default-toolchain stable
        echo "$HOME/.cargo/bin" >> "$GITHUB_PATH"

    #-----------------------------------------------------------------------#
    # 4 Cache Cargo registry, git index, compiled binaries & rustup
    #-----------------------------------------------------------------------#
    - name: Restore Cargo cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          ~/.cargo/bin
          ~/.rustup
        key: ${{ runner.os }}-cargo-${{ env.JIKYUU_VERSION }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    #-----------------------------------------------------------------------#
    # 5 Install jikyuu (skips if binary already present in cache)
    #-----------------------------------------------------------------------#
    - name: Install jikyuu
      run: |
        if ! command -v jikyuu >/dev/null; then
          cargo install --locked jikyuu --version ${{ env.JIKYUU_VERSION }}
        fi
        jikyuu --version

    #-----------------------------------------------------------------------#
    # 6 Generate per‑email JSON report
    #-----------------------------------------------------------------------#
    - name: Generate coding‑hours JSON
      run: |
        ARGS=""
        if [ -n "${{ github.event.inputs.window_start }}" ]; then
          ARGS+=" --since ${{ github.event.inputs.window_start }}"
        fi

        jikyuu --format json $ARGS \
        | jq 'reduce .[] as $c ({"total":{"hours":0,"commits":0}};
               .[$c.email] = {hours:($c.hours|floor),
                              commits:$c.commit_count}
               | .total.hours   += ($c.hours|floor)
               | .total.commits += $c.commit_count)' \
        > git-hours.json

    #-----------------------------------------------------------------------#
    # 7 Create Shields.io badge
    #-----------------------------------------------------------------------#
    - name: Build badge.json
      run: |
        HOURS=$(jq '.total.hours' git-hours.json)
        cat > badge.json <<EOF
        { "schemaVersion": 1,
          "label": "Coding hours",
          "message": "${HOURS}h",
          "color": "informational" }
        EOF

    #-----------------------------------------------------------------------#
    # 8 Readable summary in job log
    #-----------------------------------------------------------------------#
    - name: Add workflow summary
      run: |
        echo "### ⏱ Coding‑hours report" >> "$GITHUB_STEP_SUMMARY"
        jq -r '
          to_entries
          | map(select(.key!="total"))
          | sort_by(-.value.hours)
          | (["Contributor","Hours","Commits"]
             , (map([.key, (.value.hours|tostring), (.value.commits|tostring)])))
          | @tsv' git-hours.json \
        | column -t -s $'\t' >> "$GITHUB_STEP_SUMMARY"

    #-----------------------------------------------------------------------#
    # 9 Upload JSON for subsequent job
    #-----------------------------------------------------------------------#
    - uses: actions/upload-artifact@v4
      with:
        name: git-hours-json
        path: git-hours.json
        retention-days: 30

    #-----------------------------------------------------------------------#
    # 10 Commit badge + snapshot to metrics branch
    #-----------------------------------------------------------------------#
    - name: Push to metrics branch
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name  "git-hours bot"
        git config --global user.email "bot@github.com"

        git fetch origin metrics || true
        git switch metrics 2>/dev/null || git switch -c metrics

        mkdir -p reports
        cp git-hours.json "reports/git-hours-$(date +%F).json"
        git add reports badge.json
        git commit -m "chore(metrics): report $(date +%F)" || echo "No change"
        git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }} metrics

###############################################################################
# Job 2 ─ Build static dashboard (table + bar‑chart) and upload Pages artifact
###############################################################################
  build-site:
    needs: report
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: actions/download-artifact@v4
      with:
        name: git-hours-json
        path: tmp                             # tmp/git-hours.json

    # Assemble site/
    - name: Build KPIs site
      run: |
        DATE=$(date +%F)
        mkdir -p site/data
        cp tmp/git-hours.json "site/data/git-hours-${DATE}.json"
        cp tmp/git-hours.json site/git-hours-latest.json

        python - <<'PY'
        import json, datetime, pathlib, html, textwrap
        data  = json.load(open('tmp/git-hours.json'))
        total = data['total']
        labels = [html.escape(k) for k in data.keys() if k != 'total']
        rows = "\n".join(
            f"<tr><td>{l}</td><td>{data[l]['hours']}</td><td>{data[l]['commits']}</td></tr>"
            for l in labels)

        page = f"""
        <!doctype html><html lang='en'><head>
          <meta charset='utf-8'>
          <title>Collaborator KPIs</title>
          <link rel='stylesheet'
                href='https://cdn.jsdelivr.net/npm/simpledotcss/simple.min.css'>
          <script src='https://cdn.jsdelivr.net/npm/sortable-tablesort/sortable.min.js' defer></script>
          <script src='https://cdn.jsdelivr.net/npm/chart.js'></script>
          <style>canvas{{max-height:400px}}</style>
        </head><body><main>
          <h1>Collaborator KPIs</h1>
          <p><em>Last updated {datetime.datetime.utcnow():%Y‑%m‑%d %H:%M UTC}</em></p>

          <h2>Totals</h2>
          <ul>
            <li><strong>Hours</strong>: {total['hours']}</li>
            <li><strong>Commits</strong>: {total['commits']}</li>
            <li><strong>Contributors</strong>: {len(data)-1}</li>
          </ul>

          <h2>Hours per contributor</h2>
          <canvas id='hoursChart'></canvas>

          <h2>Detail table</h2>
          <table class='sortable'>
            <thead><tr><th>Contributor</th><th>Hours</th><th>Commits</th></tr></thead>
            <tbody>{rows}</tbody>
          </table>

          <p>Historical JSON snapshots live in <code>/data</code>.</p>

          <script>
            fetch('git-hours-latest.json')
              .then(r => r.json())
              .then(d => {{
                const labels = Object.keys(d).filter(k => k !== 'total');
                const hours  = labels.map(l => d[l].hours);
                new Chart(document.getElementById('hoursChart'), {{
                  type: 'bar',
                  data: {{
                    labels: labels,
                    datasets: [{{ label: 'Hours', data: hours }}]
                  }},
                  options: {{
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {{ legend: {{ display: false }} }},
                    scales: {{ y: {{ beginAtZero: true }} }}
                  }}
                }});
              }});
          </script>
        </main></body></html>
        """
        pathlib.Path('site/index.html').write_text(textwrap.dedent(page))
        PY

    - uses: actions/upload-pages-artifact@v2
      with:
        path: site

###############################################################################
# Job 3 ─ Deploy Pages artifact
###############################################################################
  deploy-pages:
    needs: build-site
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - id: deployment
      uses: actions/deploy-pages@v4
