name: Test Missingâ€‘Inâ€‘Project Action on Windows
on:
  workflow_dispatch:

jobs:
  test-missing-in-project:
    runs-on: windows-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Prepare dummy project and VI
        shell: pwsh
        run: |
          # 1) Create lv_icon.lvproj at repo root
          New-Item -Path "$Env:GITHUB_WORKSPACE\lv_icon.lvproj" -ItemType File -Force | Out-Null
          Set-Content -Path "$Env:GITHUB_WORKSPACE\lv_icon.lvproj" -Value "<Project/>"

          # 2) Ensure action folder & dummy VI exist
          $actionDir = Join-Path $Env:GITHUB_WORKSPACE '.github\actions\missing-in-project'
          if (-not (Test-Path $actionDir)) {
            New-Item -Path $actionDir -ItemType Directory -Force | Out-Null
          }
          Set-Content -Path (Join-Path $actionDir 'MissinInProjectCLI.vi') -Value "<VI/>"

      - name: Stub g-cli
        shell: pwsh
        run: |
          # Create g-cli.cmd that returns a successful JSON payload
          $stub = '@echo off
          echo {"Passed": true, "MissingFiles": ""}'
          Set-Content -Path "$Env:GITHUB_WORKSPACE\g-cli.cmd" -Value $stub -Encoding ASCII

          # Ensure our stub is found before any system g-cli
          $Env:PATH = "$Env:GITHUB_WORKSPACE;$Env:PATH"

      - name: Run Missingâ€¯Inâ€¯Project action
        id: mip
        uses: ./.github/actions/missing-in-project
        with:
          lv-ver: 2021
          arch:   64
          # project-path omitted â†’ defaults to repo root

      - name: Dump action outputs
        shell: pwsh
        run: |
          Write-Host "âœ… passed:        $(${{ steps.mip.outputs.passed }})"
          Write-Host "ðŸ“‹ missing-files: $(${{ steps.mip.outputs['missing-files'] }})"
