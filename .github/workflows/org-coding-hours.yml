name: Org Coding Hours

on:
  workflow_dispatch:
    inputs:
      repos:
        description: 'Space-separated list of owner/repo names'
        required: true
      window_start:
        description: 'Optional start date YYYY-MM-DD'
        required: false

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  report:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v4
      with: { go-version: '1.24' }
    - name: Install git-hours v0.1.2
      run: |
        git clone --depth 1 --branch v0.1.2 https://github.com/trinhminhtriet/git-hours.git git-hours-src
        sed -i 's/go 1.24.1/go 1.24/' git-hours-src/go.mod
        (cd git-hours-src && go install .)
    - name: Run git-hours across repos
      env:
        REPOS: ${{ github.event.inputs.repos }}
        WINDOW_START: ${{ github.event.inputs.window_start }}
      run: |
        python .github/scripts/org_coding_hours.py
    - uses: actions/upload-artifact@v4
      with:
        name: git-hours-aggregated-json
        path: reports/git-hours-aggregated-*.json
        retention-days: 30

  build-site:
    needs: report
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
      with: { name: git-hours-aggregated-json, path: tmp }
    - name: Build KPIs site
      run: |
        FILE=$(find tmp -name 'git-hours-aggregated-*.json' | head -n 1)
        DATE=$(date +%F)
        mkdir -p site/data
        cp tmp/reports/git-hours-*.json site/data/
        cp "$FILE" "site/data/git-hours-${DATE}.json"
        cp "$FILE" site/git-hours-latest.json
        export FILE DATE
        python - <<'PY'
        import json, datetime, pathlib, html, textwrap, os, glob

        date = os.environ['DATE']
        agg_file = os.environ['FILE']
        data  = json.load(open(agg_file))
        total = data['total']

        labels = [html.escape(k) for k in data if k != 'total']
        rows = "\n".join(
            f"<tr><td>{l}</td><td>{data[l]['hours']}</td><td>{data[l]['commits']}</td></tr>"
            for l in labels)

        sections = []
        for path in glob.glob(f"tmp/reports/git-hours-*-{date}.json"):
            if 'aggregated' in path:
                continue
            repo_enc = pathlib.Path(path).stem.split(f'-{date}')[0][10:]
            repo = repo_enc.replace('_', '/')
            repo_data = json.load(open(path))
            repo_labels = [html.escape(k) for k in repo_data if k != 'total']
            repo_rows = "\n".join(
                f"<tr><td>{l}</td><td>{repo_data[l]['hours']}</td><td>{repo_data[l]['commits']}</td></tr>"
                for l in repo_labels)
            sections.append(f"<h2>{repo}</h2><table class='sortable'>"
                           f"<thead><tr><th>Contributor</th><th>Hours</th><th>Commits</th></tr></thead>"
                           f"<tbody>{repo_rows}</tbody></table>")

        page = f"""
        <!doctype html><html lang='en'><head>
          <meta charset='utf-8'>
          <title>Collaborator KPIs</title>
          <link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/simpledotcss/simple.min.css'>
          <script src='https://cdn.jsdelivr.net/npm/sortable-tablesort/sortable.min.js' defer></script>
          <script src='https://cdn.jsdelivr.net/npm/chart.js'></script>
          <style>canvas{{max-height:400px}}</style>
        </head><body><main>
          <h1>Collaborator KPIs</h1>
          <p><em>Last updated {datetime.datetime.utcnow():%Y-%m-%d %H:%M UTC}</em></p>

          <h2>Totals (all repos)</h2>
          <ul>
            <li><strong>Hours</strong>: {total['hours']}</li>
            <li><strong>Commits</strong>: {total['commits']}</li>
            <li><strong>Contributors</strong>: {len(data)-1}</li>
          </ul>

          <h2>Hours per contributor</h2>
          <canvas id='hoursChart'></canvas>

          <h2>Detail table (all repos)</h2>
          <table class='sortable'>
            <thead><tr><th>Contributor</th><th>Hours</th><th>Commits</th></tr></thead>
            <tbody>{rows}</tbody>
          </table>

          {''.join(sections)}

          <p>Historical JSON snapshots live in <code>/data</code>.</p>

          <script>
            fetch('git-hours-latest.json')
              .then(r => r.json())
              .then(d => {{
                const labels = Object.keys(d).filter(k => k !== 'total');
                const hours  = labels.map(l => d[l].hours);
                new Chart(document.getElementById('hoursChart'), {{
                  type: 'bar',
                  data: {{ labels, datasets:[{{label:'Hours',data:hours}}] }},
                  options: {{
                    responsive:true, maintainAspectRatio:false,
                    plugins:{{legend:{{display:false}}}},
                    scales:{{y:{{beginAtZero:true}}}}
                  }}
                }});
              }});
          </script>
        </main></body></html>
        """
        pathlib.Path('site/index.html').write_text(textwrap.dedent(page))
        PY
    - uses: actions/upload-pages-artifact@v3
      with: { path: site }

  deploy-pages:
    needs: build-site
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - id: deployment
      uses: actions/deploy-pages@v4
